resources:
- name: java-buildpack
  type: github-release
  source:
    owner: cloudfoundry
    repository: java-buildpack

- name: rootfs
  type: docker-image
  source:
    repository: packs/cf:run

- name: spring-music
  type: git
  source:
    uri: https://github.com/sclevine/spring-music
    branch: master

- name: droplet
  type: s3
  source:
    bucket: sclevine
    regexp: spring-music/spring-music-(.*).droplet
    region_name: us-east-2
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

- name: app-image
  type: docker-image
  source:
    repository: sclevine/spring-music
    username: {{registry-username}}
    password: {{registry-password}}

jobs:
- name: build
  plan:
  - aggregate:
    - do:
      - get: spring-music
        trigger: true
      - task: build-jar
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: openjdk}
          inputs:
          - name: spring-music
          outputs:
          - name: spring-music-jar
            path: spring-music/build/libs
          run:
            dir: spring-music
            path: gradlew
            args: [clean, assemble]
    - do:
      - get: java-buildpack
        trigger: true
        params:
          globs: [java-buildpack-v*.zip]
      - task: use-buildpack
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine}
          inputs:
          - name: java-buildpack
          outputs:
          - name: buildpacks
          run:
            path: sh
            args:
            - -exc
            - |
              mv java-buildpack/java-buildpack-v*.zip buildpacks/$(echo java_buildpack|md5sum|cut -f1 -d' ').zip
  - task: build-droplet
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: packs/cf, tag: build}
      inputs:
      - name: spring-music-jar
        path: /workspace
      - name: buildpacks
        path: /buildpacks
      outputs:
      - name: out
        path: /out
      caches:
      - path: /cache
      params:
        PACK_APP_ZIP: /workspace/spring-music.jar
      run:
        path: sh
        args:
        - -exc
        - |
          /packs/builder \
            -outputDroplet \
              /out/spring-music-0.0.$(git rev-list --count HEAD)+$(git rev-parse --short HEAD).droplet \
            -outputBuildArtifactsCache \
              /cache/spring-music-0.0.$(git rev-list --count HEAD)+$(git rev-parse --short HEAD).cache
  - put: droplet
    params:
      file: out/spring-music-*.droplet

- name: export
  plan:
  - aggregate:
    - get: droplet
      trigger: true
      passed: [build]
    - get: rootfs
      trigger: true
  - task: build-image
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine, tag: latest}
      inputs:
      - name: droplet
      outputs:
      - name: image
      run:
        path: sh
        args:
        - -exc
        - |
          cp droplet/*.droplet image/droplet.tgz
          ( echo "FROM packs/cf:run" && \
            echo 'ADD droplet.tgz /home/vcap' && \
            echo 'ENTRYPOINT ["/packs/launcher"]' \
          ) > image/Dockerfile
  - put: app-image
    params:
      build: image